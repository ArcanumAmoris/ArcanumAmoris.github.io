{"version":3,"sources":["StoreAndReducers/CombineReducers.js","StoreAndReducers/CurNoteReducer.js","StoreAndReducers/NotesReducer.js","StoreAndReducers/MessageReducer.js","StoreAndReducers/QuillReducer.js","StoreAndReducers/NewQuillReducer.js","StoreAndReducers/ReduxStore.js","StoreAndReducers/Actions.js","Logic.js","NoteInput.js","Notes.js","App.js","index.js"],"names":["combineReducers","SetCurrentNote","state","action","type","payload","NotesReducer","SetMessage","SetQuill","SetNewQuill","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","SetActionForCurrentNote","selectedNote","index","SetActionForMessage","message","SetActionForNotes","noteArray","SetActionForNewQuill","a","keyGreaterThan","i","Array","from","Object","keys","localStorage","join","some","el","saveNote","quill","noteIndex","length","key","setItem","JSON","stringify","getContents","ops","setTimeout","dispatch","getAllNotes","saveChanges","getItem","notes","reduce","acc","id","note","sortNotes","selectNote","newNotes","getNotes","filter","removeNote","sort","b","limitDisplayText","noteText","parse","insert","split","NOTEPAD_TOOLBAR","NoteInput","useSelector","newQuill","useState","disabled","setDisabled","wrapperRef","useCallback","wrapper","innerHTML","editor","document","createElement","append","q","Quill","modules","toolbar","Logic","theme","SetActionForQuill","useEffect","on","delta","input","getLength","scroll","setContents","className","ref","onClick","Notes","deleteSelected","setDelete","numberOfNotes","Delete","map","val","e","noteID","stopPropagation","removeItem","value","readOnly","App","render","ReactDOM","getElementById","subscribe"],"mappings":"oMAOeA,kBAAgB,CAC3BC,eCNW,WAA6C,IAArBC,EAAoB,uDAAZ,GAAIC,EAAQ,uCACvD,OAAQA,EAAOC,MACX,IAAK,mBACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,IDEfI,aETW,WAA2C,IAArBJ,EAAoB,uDAAZ,GAAIC,EAAQ,uCACrD,OAAQA,EAAOC,MACX,IAAK,YACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,IFKfK,WGVW,WAAyC,IAArBL,EAAoB,uDAAZ,GAAIC,EAAQ,uCACnD,OAAQA,EAAOC,MACX,IAAK,cACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,IHMfM,SIXW,WAAyC,IAAvBN,EAAsB,uDAAd,KAAMC,EAAQ,uCACnD,OAAQA,EAAOC,MACX,IAAK,YACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,IJOfO,YKZW,WAA0C,IAArBP,EAAoB,uDAAZ,GAAIC,EAAQ,uCACpD,OAAQA,EAAOC,MACX,IAAK,gBACD,OAAOD,EAAOE,QAClB,QACI,OAAOH,MCAJQ,EAFDC,YAAYC,EAASC,OAAOC,8BAAgCD,OAAOC,gCCHpEC,EAA0B,SAACC,EAAcC,GAAf,MAA0B,CAC7Db,KAAM,mBACNC,QAAS,CACPW,aAAcA,EACdC,MAAOA,KAIAC,EAAsB,SAACC,GAAD,MAAc,CAC7Cf,KAAM,cACNC,QAASc,IAQAC,EAAoB,SAAAC,GAAS,MAAK,CAC3CjB,KAAM,YACNC,QAASgB,IAGAC,EAAuB,SAACC,GAAD,MAAQ,CAC1CnB,KAAM,gBACNC,QAASkB,ICJX,SAASC,EAAeC,GAEpB,OADYC,MAAMC,KAAKC,OAAOC,KAAKC,cAAcC,KAAK,MAC3CC,MAAK,SAAAC,GAAE,OAAIA,EAAKR,KAGxB,SAASS,EAASlB,EAAcmB,EAAOC,GAC1C,GAAIpB,GAxBD,SAAqBmB,EAAOC,GAC/B,IAAK,IAAIX,EAAI,EAAGA,EAAIK,aAAaO,OAAQZ,IAAK,CAC1C,IAAIa,EAAMR,aAAaQ,IAAIb,GAC3B,GAAIa,GAAOF,EAAW,CAClBN,aAAaS,QAAQD,EAAKE,KAAKC,UAAUN,EAAMO,cAAcC,MAC7DC,YAAW,WACPlC,EAAMmC,SAAS3B,EAAoB,KACnCR,EAAMmC,SAASvB,EAAqB,QACrC,KACHZ,EAAMmC,SAASvB,EAAqB,KACpCZ,EAAMmC,SAAS3B,EAAoB,kCACnCR,EAAMmC,SAAS9B,EAAwB,KACvC+B,IACA,QAYJC,CAAYZ,EAAOC,QAEnB,IAAK,IAAIX,EAAI,EAAGA,EAAI,IAAWA,IAC3B,IAAKK,aAAakB,QAAQvB,KAAOD,EAAeC,GAAhD,CACIK,aAAaS,QAAQd,EAAGe,KAAKC,UAAUN,EAAMO,cAAcC,MAC3DC,YAAW,WACPlC,EAAMmC,SAAS3B,EAAoB,KACnCR,EAAMmC,SAASvB,EAAqB,QACrC,KACHZ,EAAMmC,SAASvB,EAAqB,KACpCZ,EAAMmC,SAAS3B,EAAoB,8BACnC4B,IACA,OAQT,SAASA,IACZ,IAAMG,EAAQrB,OAAOC,KAAKC,cAAcoB,QAAO,SAACC,EAAIb,GAChD,MAAM,GAAN,mBAAWa,GAAX,CAAgB,CAACC,GAAId,EAAKe,KAAMvB,aAAaQ,QAC5C,IACLgB,EAAUL,GACVvC,EAAMmC,SAASzB,EAAmB6B,IAG/B,SAASM,EAAWvC,EAAcC,GACrCP,EAAMmC,SAAS9B,EAAwBC,EAAcC,IAgBlD,SAAoBA,GACvB,IAAMuC,EAbH,WACH,IAAMP,EAAQrB,OAAOC,KAAKC,cAAcoB,QAAO,SAACC,EAAIb,GAChD,MAAM,GAAN,mBAAWa,GAAX,CAAgB,CAACC,GAAId,EAAKe,KAAMvB,aAAaQ,QAC5C,IAEL,OADAgB,EAAUL,GACHA,EAQUQ,GAAWC,QAAO,SAACL,GAAD,OAAUA,EAAKD,KAAOnC,KACzDP,EAAMmC,SAASzB,EAAkBoC,IAjBjCG,CAAW1C,GAWf,SAASqC,EAAUL,GACf,OAAOA,EAAMW,MAAK,SAACrC,EAAGsC,GAAJ,OAAUtC,EAAE6B,GAAKS,EAAET,MAQjC,SAASU,EAAiBT,GAC1B,IACMU,EADavB,KAAKwB,MAAMX,GACF,GAAGY,OAE/B,OADsBF,EAASG,MAAM,IAAK,IAAInC,KAAK,MAAQgC,EAAS1B,OAAS,GAAK,MAAQ,KAc3F,IAAM8B,EAAkB,CAC3B,CAAC,CAAE,KAAQ,IAAM,CAAE,KAAQ,KAC3B,CAAE,OAAQ,SAAU,aACpB,CAAC,CAAE,MAAS,IAAM,CAAE,WAAc,KAClC,CAAC,CAAE,OAAU,CAAC,EAAG,EAAG,EAAG,EAAG,IAAM,cAChC,CAAC,CAAE,KAAQ,WAAa,CAAE,KAAQ,UAAW,CAAE,OAAU,MAAQ,CAAE,OAAU,OAC7E,CAAE,YAAa,CAAE,MAAS,KAC1B,CAAE,U,OCjDSC,MA5Cf,WACI,IAAMpD,EAAeqD,aAAY,SAAAnE,GAAK,OAAIA,EAAMD,eAAee,gBACzDoB,EAAYiC,aAAY,SAAAnE,GAAK,OAAIA,EAAMD,eAAegB,SACtDqD,EAAWD,aAAY,SAAAnE,GAAK,OAAIA,EAAMO,eACtCU,EAAUkD,aAAY,SAAAnE,GAAK,OAAIA,EAAMK,cACrC4B,EAAQkC,aAAY,SAAAnE,GAAK,OAAIA,EAAMM,YACzC,EAAgC+D,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAaC,uBAAY,SAAAC,GAC3B,GAAe,MAAXA,EAAJ,CACAA,EAAQC,UAAY,GACpB,IAAMC,EAASC,SAASC,cAAc,OACtCJ,EAAQK,OAAOH,GACf,IAAII,EAAI,IAAIC,EAAML,EAAQ,CAAEM,QAAS,CAACC,QAASC,GAAyBC,MAAO,SAC/E7E,EAAMmC,SFVmB,SAACqC,GAAD,MAAQ,CACrC9E,KAAM,YACNC,QAAS6E,GEQUM,CAAkBN,OAClC,CAACZ,IAoBJ,OAlBAmB,qBAAU,WACO,MAATtD,GACJA,EAAMuD,GAAG,eAAe,SAACC,GACrB,IAAMC,EAAQzD,EAAM0D,YAEhBpB,EADAmB,EAAO,GAAK,QAMrB,CAACzD,IAEJsD,qBAAU,WACO,MAATtD,IACJtB,OAAOiF,OAAO,EAAE,GAChB3D,EAAM4D,YAAYvD,KAAKwB,MAAMhD,GAAe,WAC7C,CAACA,IAGA,qCACCG,GAAW,qBAAK6E,UAAU,UAAf,SAA0B7E,IACtC,qBAAK6E,UAAU,YAAYC,IAAKvB,IAChC,wBAAQsB,UAAU,OAAOE,QAAS,kBAAMZ,EAAetE,EAAcmB,EAAOC,IAAYoC,SAAUA,EAAlG,sB,kCCbO2B,MA5Bf,WACI,IAAMlD,EAAQoB,aAAY,SAAAnE,GAAK,OAAIA,EAAMI,gBACzC,EAAoCiE,oBAAS,GAA7C,mBAAO6B,EAAP,KAAuBC,EAAvB,KACMC,EAAgBxE,aAAaO,OAMnC,OAJAoD,qBAAU,SAAChE,GACP6D,MACD,IAGC,sBAAKU,UAAU,QAAf,UACI,sBAAKA,UAAU,eAAf,UACI,cAACO,EAAA,EAAD,CAAQP,UAAU,YAAYE,QAAS,kBAAMG,GAAWD,MACxD,0CAAaE,EAAb,eAGJ,8BACIrD,EAAMuD,KAAI,SAACC,GACR,OACA,sBAAkBP,QAAS,kBAAMZ,EAAiBmB,EAAIpD,KAAMoD,EAAIrD,KAAK4C,UAAU,YAA/E,UACEI,GAAkB,cAACG,EAAA,EAAD,CAAQP,UAAU,SAASE,QAAS,SAACQ,GAAD,OF0DpE,SAAoBC,EAAQD,GAC/BA,EAAEE,kBACF9E,aAAa+E,WAAWF,GACxB7D,IACAF,YAAW,WACPlC,EAAMmC,SAAS3B,EAAoB,OACpC,KACHR,EAAMmC,SAAS3B,EAAoB,6CEjE2CoE,CAAiBmB,EAAIrD,GAAIsD,MACvF,cAAC,IAAD,CAAYV,UAAU,OAAOc,MAAOxB,EAAuBmB,EAAIpD,MAAO0D,UAAU,MAFvEN,EAAIrD,aCXlB4D,MAXf,WACE,OACE,mCACI,sBAAKhB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,UCHV,SAASiB,IACLC,IAASD,OACT,cAAC,IAAD,CAAUvG,MAAOA,EAAjB,SACI,cAAC,EAAD,MAEJqE,SAASoC,eAAe,SAG5BF,IAEAvG,EAAM0G,UAAUH,I","file":"static/js/main.4658f023.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\nimport SetCurrentNote from \"./CurNoteReducer\"\nimport NotesReducer from \"./NotesReducer\";\nimport SetNewQuill from \"./NewQuillReducer\";\nimport SetMessage from \"./MessageReducer\";\nimport SetQuill from \"./QuillReducer\";\n\nexport default combineReducers({\n    SetCurrentNote,\n    NotesReducer,\n    SetMessage,\n    SetQuill,\n    SetNewQuill\n})","\n\nexport default function SetCurrentNote(state = [], action) {\n    switch (action.type) {\n        case \"SET_CURRENT_NOTE\":\n            return action.payload\n        default:\n            return state\n    }\n}","export default function NotesReducer(state = [], action) {\n    switch (action.type) {\n        case \"SET_NOTES\":\n            return action.payload \n        default:\n            return state\n    }\n}","export default function SetMessage(state = \"\", action) {\n    switch (action.type) {\n        case \"SET_MESSAGE\":\n            return action.payload \n        default:\n            return state\n    }\n}","export default function SetQuill(state = null, action) {\n    switch (action.type) {\n        case \"SET_QUILL\":\n            return action.payload \n        default:\n            return state\n    }\n}","export default function SetNewQuill(state = \"\", action) {\n    switch (action.type) {\n        case \"SET_NEW_QUILL\":\n            return action.payload \n        default:\n            return state\n    }\n}","import {createStore} from 'redux'\nimport reducer from \"./CombineReducers\"\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()); \n\nexport default store;","export const SetActionForCurrentNote = (selectedNote, index) => ({\n    type: \"SET_CURRENT_NOTE\",\n    payload: {\n      selectedNote: selectedNote,\n      index: index\n    }\n  })\n\nexport const SetActionForMessage = (message) => ({\n    type: \"SET_MESSAGE\",\n    payload: message\n})\n\nexport const SetActionForQuill = (q) => ({\n    type: \"SET_QUILL\",\n    payload: q\n})\n\nexport const SetActionForNotes = noteArray => ({\n    type: \"SET_NOTES\",\n    payload: noteArray\n})\n\nexport const SetActionForNewQuill = (a) => ({\n  type: \"SET_NEW_QUILL\",\n  payload: a\n})","import store from './StoreAndReducers/ReduxStore'\nimport { SetActionForCurrentNote, SetActionForMessage, SetActionForNewQuill, SetActionForNotes } from './StoreAndReducers/Actions'\n\nexport function saveChanges(quill, noteIndex) {\n    for (let i = 0; i < localStorage.length; i++) {\n        var key = localStorage.key(i)\n        if (key == noteIndex) {\n            localStorage.setItem(key, JSON.stringify(quill.getContents().ops))\n            setTimeout(() => {\n                store.dispatch(SetActionForMessage(\"\"))\n                store.dispatch(SetActionForNewQuill(\" \"))\n            }, 3000);\n            store.dispatch(SetActionForNewQuill(\"\"))\n            store.dispatch(SetActionForMessage(\"Your changes have been saved!\"))\n            store.dispatch(SetActionForCurrentNote([]))\n            getAllNotes()\n            break\n        }\n    }\n}\n\nfunction keyGreaterThan(i) {\n    const arr = Array.from(Object.keys(localStorage).join(\" \"))\n    return arr.some(el => el > i)\n}\n\nexport function saveNote(selectedNote, quill, noteIndex) {\n    if (selectedNote) {\n        saveChanges(quill, noteIndex)\n    } else {\n        for (let i = 0; i < 100000000; i++) {\n            if (!localStorage.getItem(i) && !keyGreaterThan(i)) {\n                localStorage.setItem(i, JSON.stringify(quill.getContents().ops))\n                setTimeout(() => {\n                    store.dispatch(SetActionForMessage(\"\"))\n                    store.dispatch(SetActionForNewQuill(\" \"))\n                }, 3000);\n                store.dispatch(SetActionForNewQuill(\"\"))\n                store.dispatch(SetActionForMessage(\"Your note has been saved!\"))\n                getAllNotes()\n                break\n            } else {\n                continue\n            }\n        }\n    }\n}\n\nexport function getAllNotes() {\n    const notes = Object.keys(localStorage).reduce((acc,key) => {\n        return [...acc, {id: key, note: localStorage[key]}]\n      }, [])\n    sortNotes(notes)\n    store.dispatch(SetActionForNotes((notes)))\n}\n\nexport function selectNote(selectedNote, index) {\n    store.dispatch(SetActionForCurrentNote(selectedNote, index))\n    removeNote(index)\n}\n\nexport function getNotes() {\n    const notes = Object.keys(localStorage).reduce((acc,key) => {\n        return [...acc, {id: key, note: localStorage[key]}]\n      }, [])\n    sortNotes(notes)\n    return notes\n}   \n\nfunction sortNotes(notes) {\n    return notes.sort((a, b) => a.id - b.id )\n}\n\nexport function removeNote(index) {\n    const newNotes = getNotes().filter((note) => note.id !== index)\n    store.dispatch(SetActionForNotes(newNotes))\n    }\n\n export function limitDisplayText(note) {\n        const noteParsed = JSON.parse(note)\n        const noteText = noteParsed[0].insert\n        const shortenedText = noteText.split(\" \", 10).join(\" \") + (noteText.length > 20 ? \"...\" : \" \")\n        return shortenedText\n    }\n\nexport function deleteNote(noteID, e) {\n    e.stopPropagation()\n    localStorage.removeItem(noteID)\n    getAllNotes()\n    setTimeout(() => {\n        store.dispatch(SetActionForMessage(\"\"))\n    }, 4000);\n    store.dispatch(SetActionForMessage(\"Your note has successfully been deleted!\"))\n}\n\nexport const NOTEPAD_TOOLBAR = [\n    [{ 'font': [] }, { 'size': [] }],\n    [ 'bold', 'italic', 'underline'],\n    [{ 'color': [] }, { 'background': [] }],\n    [{ 'header': [1, 2, 3, 4, 5] }, 'code-block' ],\n    [{ 'list': 'ordered' }, { 'list': 'bullet'}, { 'indent': '-1' }, { 'indent': '+1' }],\n    [ 'direction', { 'align': [] }],\n    [ 'clean' ]\n]\n\n\n\n","import React, { useCallback, useEffect, useState } from 'react'\nimport * as Quill from 'quill'\nimport \"quill/dist/quill.snow.css\"\nimport \"./NoteInput.css\"\nimport { useSelector } from \"react-redux\"\nimport * as Logic from \"./Logic.js\"\nimport store from './StoreAndReducers/ReduxStore'\nimport { SetActionForQuill } from './StoreAndReducers/Actions'\n\nfunction NoteInput() {\n    const selectedNote = useSelector(state => state.SetCurrentNote.selectedNote)\n    const noteIndex = useSelector(state => state.SetCurrentNote.index)\n    const newQuill = useSelector(state => state.SetNewQuill)\n    const message = useSelector(state => state.SetMessage)\n    const quill = useSelector(state => state.SetQuill)\n    const [disabled, setDisabled] = useState(true)\n\n    const wrapperRef = useCallback(wrapper => {\n        if (wrapper == null) return \n        wrapper.innerHTML = ''\n        const editor = document.createElement(\"div\")\n        wrapper.append(editor)\n        var q = new Quill(editor, { modules: {toolbar: Logic.NOTEPAD_TOOLBAR }, theme: \"snow\" })  \n        store.dispatch(SetActionForQuill(q))\n    }, [newQuill])\n\n    useEffect(() => {\n        if (quill == null) return \n        quill.on(\"text-change\", (delta) => {\n            const input = quill.getLength()\n            if (input -1 == 0) {\n                setDisabled(true)\n            } else {\n                setDisabled(false)\n            }\n        })\n    }, [quill])\n\n    useEffect(() => { \n        if (quill == null) return \n        window.scroll(0,0)\n        quill.setContents(JSON.parse(selectedNote), \"user\")\n    }, [selectedNote])\n\n    return ( \n        <>\n        {message && <div className=\"message\">{message}</div>}\n        <div className=\"container\" ref={wrapperRef}></div>\n        <button className=\"save\" onClick={() => Logic.saveNote(selectedNote, quill, noteIndex)} disabled={disabled}>Save</button>\n        </>\n    )  \n}\n\nexport default NoteInput","import React, { useEffect, useState} from 'react'\nimport \"./Notes.css\"\nimport ReactQuill from 'react-quill'\nimport { useSelector } from 'react-redux'\nimport * as Logic from \"./Logic.js\"\nimport { Delete } from '@material-ui/icons'\n\nfunction Notes() {\n    const notes = useSelector(state => state.NotesReducer)\n    const [deleteSelected, setDelete] = useState(false)\n    const numberOfNotes = localStorage.length\n    \n    useEffect((i) => {\n        Logic.getAllNotes()\n    }, [])  \n\n    return (\n        <div className=\"notes\">\n            <div className=\"notes_header\">\n                <Delete className=\"selectDlt\" onClick={() => setDelete(!deleteSelected)}></Delete>\n                <p>You have {numberOfNotes} notes</p>\n            </div>\n\n            <div>\n               {notes.map((val) => {\n                   return (\n                   <div key={val.id} onClick={() => Logic.selectNote(val.note, val.id)} className=\"editorDiv\">\n                    {deleteSelected && <Delete className=\"delBtn\" onClick={(e) => Logic.deleteNote(val.id, e)}></Delete>}\n                    <ReactQuill className=\"note\" value={Logic.limitDisplayText(val.note)} readOnly={true}  /></div>)\n               })}\n            </div>\n        </div>\n    )\n}\n\nexport default Notes\n","import './App.css';\nimport NoteInput from './NoteInput';\nimport Notes from './Notes';\n\nfunction App() {\n  return (\n    <>\n        <div className=\"app\">\n          <Notes />\n          <NoteInput />\n        </div>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './StoreAndReducers/ReduxStore';\n\nfunction render() {\n    ReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n}\n\nrender()\n\nstore.subscribe(render)"],"sourceRoot":""}